version: '3'

services:
    minio:
        container_name: minio
        image: minio/minio
        hostname: "minio"
        ports:
          - 9000:9000 # API 端口
          - 9001:9001 # 控制台端口
        environment:
          MINIO_ACCESS_KEY: admin
          MINIO_SECRET_KEY: admin123
        command: server --console-address ':9001' /data
        restart: always
    web:
        container_name: web
        build: "web/."
        volumes:
          - './web:/app'
          - '/app/node_modules'
        ports:
          - '3000:3000'
        environment:
          - MODE=development
    backend:
        container_name: backend
        build: "backend/."
        volumes:
          - "./backend:/code"
        ports:
          - "5000:5000"
        command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload"
        #command: gunicorn -c gunicorn.conf.py --logger-class=app.log_config.UniformLogger app.main:app
        environment:
          - MODE=dev
        depends_on:
          - db
    mlaas:
        container_name: mlaas
        build: "mlaas/."
        volumes:
          - "./mlaas:/code"
        ports:
          - "7777:7777"
        command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 7777 --reload"
        #command: gunicorn -c gunicorn.conf.py --logger-class=app.log_config.UniformLogger app.main:app
        environment:
          - MODE=dev
        depends_on:
          - db
    nginx:
        container_name: nginx
        volumes:
          - "./nginx:/etc/nginx/conf.d"
        build: ./nginx
        ports:
          - 80:80
        depends_on:
          - backend
          - web
    db:
        container_name: postgres
        image: postgres:14
        restart: always
        environment:
          - POSTGRES_DATABASE=postgres
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=postgres
          - TZ=Asia/Taipei
        volumes:
          - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
          - 5432:5432
    redis:
        container_name: redis
        image: "redis:alpine"
        ports:
          - "6379:6379"