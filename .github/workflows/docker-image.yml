name: Build Docker image and scan vulnerabilities

on:
  workflow_dispatch:
    branches:
    - 'develop'
    - 'main'
    inputs:
      tags:
        description: 'Test scenario tags'
        required: false 
        type: str
      component:
        description: 'Dockerfile path'
        type: choice
        required: true 
        options:
        - backend
        - web
      Dockerfile:
        description: 'Dockerfile name'
        type: str
        required: true
        options:
        - Dockerfile
        - Dockerfile.dev
        - Dockerfile.prod
      username:
        description: 'DockerHub username'
        type: str
        required: true
      password:
        description: 'DockerHub password'
        type: str
        required: true
      args:
        description: 'Docker build args，e.g. --build-arg VITE_APP_VERSION=v1.0.15'
        type: str
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      component: ${{ github.event.inputs.component }}
      tags: ${{ github.event.inputs.tags }}
      Dockerfile: ${{ github.event.inputs.Dockerfile }}
      username: ${{ github.event.inputs.username }}
      password: ${{ github.event.inputs.password }}
      args: ${{ github.event.inputs.args }}
    steps:
      - name: Set the value
        run: |
          echo "IMAGE=if_gp_ocr_system_${{ env.component }}" >> $GITHUB_ENV
      - run: echo ${{ env.IMAGE }}
      - run: echo "${{ env.component }}"
      - run: echo "${{ env.tags }}"
      - run: echo "${{ env.Dockerfile }}"
      - run: echo "${{ env.username }}"
      - uses: actions/checkout@v3


      - name: Build an image from Dockerfile
        id: buildx
        run: |
          # {Your Organization}/{my-app} 請置換成 DockerHub 或 GHCR 喔~~
          docker build . --file ${{ env.Dockerfile }} --tag docker.io/${{ env.username }}/${{ env.IMAGE }}:${{ env.tags }} 
        working-directory: ${{ env.component }}
  
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ env.username }}/${{ env.IMAGE }}:${{ env.tags }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
 
      - name: 'Login to DockerHub'
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ env.username }}
          password: ${{ env.password }}
 
      - name: push my baseimage to GitHub Container Registry
        run: docker push docker.io/${{ env.username }}/${{ env.IMAGE }}:${{ env.tags }}  # 您可以換版號喔！
